<?php


function peta_menu() {
	 $items = array();

  $items['hello'] = array(
    'title' => '',
    'page callback' => 'helloworld_page',
    'access arguments' => array('access content'),
   'type' => MENU_CALLBACK
    );



  $items['hello/json'] = array(
    'access callback'   => true,
    'page callback' => 'ambildatabase',
    'delivery callback' => 'drupal_json_output'
  //  'access arguments' => array('access content'),
  //  'type' => MENU_CALLBACK
    );

  return $items;
}

function ambildatabase(){
include "sites/default/settings.php";

	//koneksi ke database
	$konek1 = mysql_connect($databases['default']['default']['host'],
	$databases['default']['default']['username'],$databases['default']['default']['password']) or die("Koneksi gagal");
	mysql_select_db($databases['default']['default']['database']) or die("Database tidak bisa dibuka");


$result =db_query('SELECT entity_id, field_geolong_contoh FROM field_data_field_geolong')->fetchAll();//

 //$result =db_query('SELECT a.entity_id,a.field_geolong_contoh,b.field_tittle_contoh FROM field_data_field_geolong a INNER JOIN field_data_field_tittle b ON a.entity_id=b.entity_id ')->fetchAll();
//$row=mysql_fetch_array($result,$konek1);
 mysql_close($konek1);
return $result;

}

function ambildb(){
return "abcd";
}


function helloworld_page(){

drupal_add_js('http://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false', 'external');


$hasilnya = "";
$hasilnya = "<div id='map-canvas' style='height:320px;margin: 0px;padding: 0px;'>";
$hasilnya .= "</div>";
$hasilnya .=   "<script>
(function($) {
                  a=5;
                  function loadJSON(callback) {
                  var xobj = new XMLHttpRequest();
                  xobj.overrideMimeType('application/json');
                  xobj.open('GET', '/hello/json', true);
                  xobj.onreadystatechange = function () {
                    if (xobj.readyState == 4 && xobj.status == '200') {
                      callback(xobj.responseText);
                    }
                  };
                  xobj.send(null);
                 };




              (function() {
              loadJSON(function(response) {

              locations= JSON.parse(response);

                var locationsss = [
      ('<h4>Bondi Beach</h4>', -33.890542, 151.274856),
      ('<h4>Coogee Beach</h4>', -33.923036, 151.259052),
      ('<h4>Cronulla Beach</h4>', -34.028249, 151.157507),
      ('<h4>Manly Beach</h4>', -33.80010128657071, 151.28747820854187),
      ('<h4>Maroubra Beach</h4>', -33.950198, 151.259302)
    ];

    // Setup the different icons and shadows
    var iconURLPrefix = 'http://maps.google.com/mapfiles/ms/icons/';

    var icons = [
      iconURLPrefix + 'red-dot.png',
      iconURLPrefix + 'green-dot.png',
      iconURLPrefix + 'blue-dot.png',
      iconURLPrefix + 'orange-dot.png',
      iconURLPrefix + 'purple-dot.png',
      iconURLPrefix + 'pink-dot.png',
      iconURLPrefix + 'yellow-dot.png'
    ]
    var icons_length = icons.length;


    var shadow = {
      anchor: new google.maps.Point(15,33),
      url: iconURLPrefix + 'msmarker.shadow.png'
    };


    var map = new google.maps.Map(document.getElementById('map-canvas'), {
      zoom: 10,
      center: new google.maps.LatLng(-37.92, 151.25),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: false,
      streetViewControl: false,
      panControl: false,
      zoomControlOptions: {
         position: google.maps.ControlPosition.LEFT_BOTTOM
      }
    });

    var infowindow = new google.maps.InfoWindow({
      maxWidth: 160
    });

    var marker;
    var markers = new Array();

    var iconCounter = 0;

     for (var i = 0; i< locations.length; i++) {
      locations = response[i]
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1]) ,
        map: map,
        icon : icons[iconCounter],
        shadow: shadow
      });

      markers.push(marker);

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));

      iconCounter++;
      // We only have a limited number of possible icon colors, so we may have to restart the counter
      if(iconCounter >= icons_length){
        iconCounter = 0;
      }
    }

    function AutoCenter() {
      //  Create a new viewpoint bound
      var bounds = new google.maps.LatLngBounds();
      //  Go through each...
      $.each(markers, function (index, marker) {
        bounds.extend(marker.position);
      });
      //  Fit these bounds to the map
      map.fitBounds(bounds);
    }
    AutoCenter();


              })

              })()

})(jQuery);
</script>";


return $hasilnya;
}
